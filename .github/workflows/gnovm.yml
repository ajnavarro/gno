name: gnovm

on:
  pull_request:
    paths:
      - "go.sum"
      - "gnovm/**.go"
      - "gnovm/**.gno"
      - "examples/**.gno"
      - "gnovm/**/go.sum"
      - "gnovm/Makefile"
      - "tm2/**.go"
      - ".github/workflows/gnovm.yml"
  push:
    branches: [ "master" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        go-version: # two latest versions
          - "1.20.x"
          - "1.21.x"
        goenv: # TODO: replace with pairs, so it's easier to read in the GH interface.
          - "GOARCH=amd64 GOOS=linux"
          - "GOARCH=wasm GOOS=js"
        program:
          - "gno"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v4
      - name: go install
        working-directory: gnovm
        run: ${{ matrix.goenv }} go install ./cmd/${{ matrix.program }}

  test:
    strategy:
      fail-fast: false
      matrix:
        go-version:
          - "1.20.x"
          - "1.21.x"
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v4
      - name: test
        working-directory: gnovm
        run: |
          export GOPATH=$HOME/go
          export GOTEST_FLAGS="-v -p 1 -timeout=30m -coverprofile=coverage.out -covermode=atomic"
          make test
      - if: runner.os == 'Linux'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: gnovm
          files: ./gnovm/coverage.out
          fail_ci_if_error: ${{ github.repository == 'gnolang/gno' }}

